################################################################################
# CCliente UDP
# Autor: Alejandro Salgado, Juan Camilo Falla, Daniel Bernal
# Fecha: 2022-03-16
# Descripción: Servidor UDP que recibe un mensaje y lo envía a un cliente
#              UDP
################################################################################

import socket
import os
import time

# Establecer el tamaño máximo de los paquetes UDP
MAX_BYTES = 65535

# Establecer el puerto y la dirección IP del servidor
server_address = ('localhost', 10000)

# Crear un socket UDP
client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Enviar un mensaje al servidor para solicitar el archivo y esperar la respuesta
filename = input("Ingrese el nombre del archivo a descargar (100MB o 250MB): ")
client_socket.sendto(filename.encode('utf-8'), server_address)

# Recibir el archivo por fragmentos y guardarlos en un archivo en el directorio "ArchivosRecibidos"
received_bytes = 0
file_path = f"ArchivosRecibidos/{os.getpid()}-Prueba-25.txt"
start_time = time.time()
with open(file_path, 'wb') as file:
    while True:
        data, _ = client_socket.recvfrom(MAX_BYTES)
        if not data:
            break
        file.write(data)
        received_bytes += len(data)
file.close()
end_time = time.time()

# Registrar los tiempos de transferencia y generar un archivo de log en el directorio "Logs"
log_path = f"Logs/{time.strftime('%Y-%m-%d-%H-%M-%S')}-log.txt"
with open(log_path, 'w') as log:
    log.write(f"Archivo recibido: {filename}\n")
    log.write(f"Tamaño del archivo: {os.path.getsize(file_path)} bytes\n")
    log.write(f"Tiempo de transferencia: {end_time - start_time:.2f} segundos\n")
    log.write(f"Entrega exitosa: {os.path.getsize(file_path) == received_bytes}")
log.close()

# Cerrar el socket
client_socket.close()